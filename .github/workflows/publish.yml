name: Publish

on:
  workflow_dispatch:

  push:
    branches:
      - "master"

  release:
    types:
      - published

  pull_request:
    branches:
      - "master"

jobs:

  all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get required Go version
        id: get-go-version
        run: |
          echo '::set-output name=go_version::'"$(awk '$1 == "golang" { print $2 }' .tool-versions)"

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '${{ steps.get-go-version.go_version }}'

      - name: Test
        run: make test

      - name: Build
        run: make build-for-prod build-for-docker

      - name: Upload package to S3
        if: |
          success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
        run: |
          make upload-package

      - name: Push Docker images to GHCR
        if: |
          success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          tag=${GITHUB_REF##*/}
          docker build -t ghcr.io/${{ github.actor }}/httpbun:$tag .
          if [[ $tag == master ]]; then
            docker build -t ghcr.io/${{ github.actor }}/httpbun:latest .
          fi
          docker login ghcr.io --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
          docker push --all-tags ghcr.io/${{ github.actor }}/httpbun

      - name: "Upload artifacts to the release"
        if: |
          success() && github.event_name == 'release'
        run: |
          make build-all VERSION="$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')"
          for file in bin/httpbun-darwin-amd64 bin/httpbun-linux-amd64 bin/httpbun-windows-amd64.exe; do
            curl --request POST \
              --header "Content-Type: $(file -b --mime-type $file)" \
              --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              --header "Accept: application/vnd.github.v3+json" \
              --upload-file "$file" \
              "https://uploads.${{ github.server_url }}/repos/${{ github.repository }}/releases/${{ github.event.release.id }}/assets?name=$(basename "$file")"
          done
